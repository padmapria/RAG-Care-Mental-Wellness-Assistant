name: RAG Care CICD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  mlops:
    runs-on: ubuntu-latest

    steps:
      # Step to checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Start Docker services using Docker Compose
      - name: Start Docker services
        run: docker-compose up -d  # Start your services in the background

      - name: Run Unit Tests
        run: docker-compose exec python-app pytest app/tests/unit_tests --cov=app

      # Run integration tests
      - name: Run Integration Tests
        run: docker-compose exec python-app pytest app/tests/integration_tests/

      # Tear down Docker services after tests
      - name: Tear down Docker services
        run: docker-compose down

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t my-app:latest .

      # Tag and push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker tag my-app:latest ${{ secrets.AWS_ECR_REGISTRY }}/my-app:latest
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/my-app:latest

      # Deploy to AWS ECS
      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment
